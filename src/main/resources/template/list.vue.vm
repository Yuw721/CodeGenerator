<template>
    <!--列表-->
    <div class="infBox">
        <div class="pageMain" v-if="!chilsShow">
            <div class="flex_b_c tabTitBox">
                <div class="flex_l_c">
                    <div class="titLine"></div>
                    <div class="listTit">{{pageName.title}}</div>
                </div>
                <div>
                    <el-button type="primary" size="small" icon="el-icon-plus" @click="toAddOrUpdate(1,null)">发布
                    </el-button>
                </div>
            </div>
            <div class="white_bg p_lr1 p_t1">
                <el-row :gutter="10">
                    <el-col :xs="24" :sm="12" :md="4" :lg="4" :xl="4" class="m_b1">
                        <el-select v-model="searchType" placeholder="请选择">
                            <el-option
                                    v-for="item in searchTypeOpt"
                                    :key="item.value"
                                    :label="item.label"
                                    :value="item.value">
                            </el-option>
                        </el-select>
                    </el-col>
                    <el-col :xs="24" :sm="12" :md="7" :lg="7" :xl="7" class="m_b1">
                        <el-input v-model="searchText" placeholder="请输入内容"></el-input>
                    </el-col>
                    <el-col :xs="24" :sm="12" :md="2" :lg="2" :xl="2" class="m_b1">
                        <el-button type="primary" size="small" @click="getColumnList">查询</el-button>
                    </el-col>
                </el-row>
            </div>
            <div class="mainTable white_bg">
                <el-table :data="tableData" v-loading="tableLoading" style="width: 100%"
                          :header-cell-style="{background:'#eeeeee'}">
                    <el-table-column type="selection" fixed></el-table-column>
                    <el-table-column label="操作" fixed="right" :width="operationArr.length > 3 ? null : 320">
                        <template slot-scope="scope">
                            <el-dropdown trigger="click" v-if="operationArr.length > 3">
                                <el-button icon="el-icon-caret-bottom"></el-button>
                                <el-dropdown-menu slot="dropdown">
                                    <el-dropdown-item v-for="item in operationArr" :key="item.id"
                                                      @click.native="operationList(item.ename,scope.row)"><i
                                            :class="item.icon"></i>{{item.name}}
                                    </el-dropdown-item>
                                </el-dropdown-menu>
                            </el-dropdown>
                            <div v-else class="i_block m_l1 blue pointer" v-for="item in operationArr" :key="item.id"
                                 @click="operationList(item.ename,scope.row)"><i :class="item.icon"></i>{{item.name}}
                            </div>
                        </template>
                    </el-table-column>
                    #foreach($column in $columns)
                        #if($column.columnName != $pk.columnName && $column.columnName !='data1'&& $column.columnName !='data2'&& $column.columnName !='data3'&& $column.columnName !='data4'&& $column.columnName !='logic_type')
                        <el-table-column
                                prop="${column.attrname}"
                                width="80"
                                :show-overflow-tooltip="true"
                                label="${column.comments}">
                        </el-table-column>
                        #end
                    #end
                </el-table>
                <!--分页组件-->
                <Paging :pagingObj="pagingObj" @getPageSize="getPageSize"></Paging>
            </div>
        </div>
        <!--表单组件-->
        <Form v-if="chilsShow" :formType="formType" :formData="formData" @getForm="getForm"></Form>
    </div>
</template>

<script>
    import Paging from '../components/paging' // 导入分页组件
    import Form from './${classname}Lssue' // 导入表单组件
    export default {
        name: "${classname}",
        components: {Paging, Form},
        data() {
            return {
                chilsShow: false,  // 是否显示表单子组件
                pageName: JSON.parse(localStorage.getItem("currentNode")),   // 页面名称
                searchTypeOpt: [{ // 类型
                    value: '选项1',
                    label: '选项1'
                }, {
                    value: '选项2',
                    label: '选项2'
                }],
                searchText: '',
                searchType: '',  // 类型
                department: '',  // 部门
                tableData: [],// 列表数据
                tableLoading: false, // 列表加载
                operationArr: [  // 操作按钮
                    {
                        name: '编辑',
                        ename: 'edit',
                        type: 'button',
                        icon: 'el-icon-edit'
                    },
                    {
                        name: '删除',
                        ename: 'del',
                        type: 'button',
                        icon: 'el-icon-delete'
                    }
                ],
                pagingObj: {
                    pageCurrent: 1, // 当前分页
                    pageSize: 10,   // 一页多少条数据
                    total: null    // 列表总条数
                }
            }
        },
        mounted() {
            this.getColumnList();
        },
        methods: {
            // 表单组件点击返回隐藏
            getForm() {
                this.chilsShow = false;
                this.getColumnList();
            },
            // 请求列表数据
            getColumnList() {
                var that = this;
                that.tableLoading = true;
                let param ={
                    page:that.pagingObj.pageCurrent,
                    pageSize: that.pagingObj.pageSize,
                    searchText : that.searchText
                }
                that.#[[$axios]]#(userFun('list${className}'), param, 'post').then((res) => {
                    if (res.status) {
                        that.pagingObj.total = Number(res.data.total);
                        that.tableData = res.data.records;
                        that.tableLoading = false;
                     }
                });
            },
            //type 1：发布；2：编辑
            toAddOrUpdate(type, data) {
                this.chilsShow = true;
                this.formType = type;
                this.formData = data;
            },
            // 操作
            operationList(method, data) {
                if (method == 'edit') {
                    this.toAddOrUpdate(2, data)
                } else if (method == 'del') {
                    this.del(data)
                }
            },
            // 删除
            del(row) {
                #[[this.$confirm('确定删除所选项吗?', '提示', {]]#
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    this.#[[$axios]]#(userFun('remove${className}')+"/"+row.id, {}, 'delete').then((res) => {
                        if (res.status) {
                            #[[this.$hint("删除成功", "success");]]#
                            this.getColumnList();
                        }
                    });
                }).catch(() => {
                    #[[this.$message({]]#
                            type: 'info',
                            message: '已取消删除'
                        });
                });
            },
            // 接收子组件（分页）传过来的值
            getPageSize(pageSize, pageCurrent) {
                // 赋值
                this.pagingObj.pageSize = pageSize;
                this.pagingObj.pageCurrent = pageCurrent;
            },
        }
    }
</script>

<style scoped>

</style>